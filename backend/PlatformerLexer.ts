// Generated from src/parser/PlatformerLexer.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class PlatformerLexer extends Lexer {
	public static readonly LEADING_SPACE = 1;
	public static readonly PLAYER = 2;
	public static readonly ENEMY = 3;
	public static readonly DOOR = 4;
	public static readonly TERRAIN = 5;
	public static readonly PLATFORM = 6;
	public static readonly BUTTON = 7;
	public static readonly COIN = 8;
	public static readonly LEVEL = 9;
	public static readonly CHECKS = 10;
	public static readonly IF = 11;
	public static readonly ADD = 12;
	public static readonly REMOVE = 13;
	public static readonly MONEY = 14;
	public static readonly STMT_NEWLINE = 15;
	public static readonly NAME = 16;
	public static readonly CONST = 17;
	public static readonly COMMA = 18;
	public static readonly OPEN_BRACE = 19;
	public static readonly CLOSE_BRACE = 20;
	public static readonly OPEN_PAREN = 21;
	public static readonly CLOSE_PAREN = 22;
	public static readonly OPEN_SQUARE = 23;
	public static readonly CLOSED_SQUARE = 24;
	public static readonly LARGER = 25;
	public static readonly SMALLER = 26;
	public static readonly EQUAL = 27;
	public static readonly SEMICOLON = 28;
	public static readonly COLON = 29;
	public static readonly LITERAL = 30;
	public static readonly LINK = 31;
	public static readonly SPACE = 32;
	public static readonly NEWLINE = 33;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"LEADING_SPACE", "PLAYER", "ENEMY", "DOOR", "TERRAIN", "PLATFORM", "BUTTON", 
		"COIN", "LEVEL", "CHECKS", "IF", "ADD", "REMOVE", "MONEY", "STMT_NEWLINE", 
		"NAME", "CONST", "COMMA", "OPEN_BRACE", "CLOSE_BRACE", "OPEN_PAREN", "CLOSE_PAREN", 
		"OPEN_SQUARE", "CLOSED_SQUARE", "LARGER", "SMALLER", "EQUAL", "SEMICOLON", 
		"COLON", "LITERAL", "LINK", "SPACE", "NEWLINE",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, "'Player '", "'Enemy '", "'Door '", "'Terrain '", 
		"'Platform '", "'Button '", "'Coin'", "'Level '", "'Checks '", "'if '", 
		"'Add'", "'Remove'", "'MONEY'", undefined, undefined, undefined, "','", 
		"'{'", "'}'", "'('", "')'", "'['", "']'", "'>'", "'<'", "'='", "';'", 
		"':'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "LEADING_SPACE", "PLAYER", "ENEMY", "DOOR", "TERRAIN", "PLATFORM", 
		"BUTTON", "COIN", "LEVEL", "CHECKS", "IF", "ADD", "REMOVE", "MONEY", "STMT_NEWLINE", 
		"NAME", "CONST", "COMMA", "OPEN_BRACE", "CLOSE_BRACE", "OPEN_PAREN", "CLOSE_PAREN", 
		"OPEN_SQUARE", "CLOSED_SQUARE", "LARGER", "SMALLER", "EQUAL", "SEMICOLON", 
		"COLON", "LITERAL", "LINK", "SPACE", "NEWLINE",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(PlatformerLexer._LITERAL_NAMES, PlatformerLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return PlatformerLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(PlatformerLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "PlatformerLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return PlatformerLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return PlatformerLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return PlatformerLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return PlatformerLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02#\xEF\b\x01\x04" +
		"\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04" +
		"\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r\t\r" +
		"\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t\x12" +
		"\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t\x17" +
		"\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t\x1C" +
		"\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t\"\x03" +
		"\x02\x06\x02G\n\x02\r\x02\x0E\x02H\x03\x02\x03\x02\x03\x03\x03\x03\x03" +
		"\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03" +
		"\x04\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03" +
		"\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03" +
		"\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03" +
		"\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\t\x03" +
		"\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03" +
		"\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03\r\x03" +
		"\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E" +
		"\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x06\x10\xA7\n" +
		"\x10\r\x10\x0E\x10\xA8\x03\x11\x03\x11\x07\x11\xAD\n\x11\f\x11\x0E\x11" +
		"\xB0\v\x11\x03\x12\x05\x12\xB3\n\x12\x03\x12\x06\x12\xB6\n\x12\r\x12\x0E" +
		"\x12\xB7\x03\x13\x03\x13\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16\x03\x16" +
		"\x03\x17\x03\x17\x03\x18\x03\x18\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1B" +
		"\x03\x1B\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1F\x06\x1F" +
		"\xD3\n\x1F\r\x1F\x0E\x1F\xD4\x03 \x06 \xD8\n \r \x0E \xD9\x03 \x03 \x06" +
		" \xDE\n \r \x0E \xDF\x03!\x06!\xE3\n!\r!\x0E!\xE4\x03!\x03!\x03\"\x06" +
		"\"\xEA\n\"\r\"\x0E\"\xEB\x03\"\x03\"\x02\x02\x02#\x03\x02\x03\x05\x02" +
		"\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02" +
		"\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11" +
		"!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02" +
		"\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02" +
		"!A\x02\"C\x02#\x03\x02\b\x04\x02\v\v\"\"\x04\x02\f\f\x0F\x0F\x04\x02C" +
		"\\c|\x05\x022;C\\c|\x03\x022;\x06\x02%%/;C\\c|\x02\xF8\x02\x03\x03\x02" +
		"\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02" +
		"\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02" +
		"\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02" +
		"\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02" +
		"\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02" +
		"\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02" +
		")\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02" +
		"\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02" +
		"\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03" +
		"\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02" +
		"\x02\x03F\x03\x02\x02\x02\x05L\x03\x02\x02\x02\x07T\x03\x02\x02\x02\t" +
		"[\x03\x02\x02\x02\va\x03\x02\x02\x02\rj\x03\x02\x02\x02\x0Ft\x03\x02\x02" +
		"\x02\x11|\x03\x02\x02\x02\x13\x81\x03\x02\x02\x02\x15\x88\x03\x02\x02" +
		"\x02\x17\x90\x03\x02\x02\x02\x19\x94\x03\x02\x02\x02\x1B\x98\x03\x02\x02" +
		"\x02\x1D\x9F\x03\x02\x02\x02\x1F\xA6\x03\x02\x02\x02!\xAA\x03\x02\x02" +
		"\x02#\xB2\x03\x02\x02\x02%\xB9\x03\x02\x02\x02\'\xBB\x03\x02\x02\x02)" +
		"\xBD\x03\x02\x02\x02+\xBF\x03\x02\x02\x02-\xC1\x03\x02\x02\x02/\xC3\x03" +
		"\x02\x02\x021\xC5\x03\x02\x02\x023\xC7\x03\x02\x02\x025\xC9\x03\x02\x02" +
		"\x027\xCB\x03\x02\x02\x029\xCD\x03\x02\x02\x02;\xCF\x03\x02\x02\x02=\xD2" +
		"\x03\x02\x02\x02?\xD7\x03\x02\x02\x02A\xE2\x03\x02\x02\x02C\xE9\x03\x02" +
		"\x02\x02EG\t\x02\x02\x02FE\x03\x02\x02\x02GH\x03\x02\x02\x02HF\x03\x02" +
		"\x02\x02HI\x03\x02\x02\x02IJ\x03\x02\x02\x02JK\b\x02\x02\x02K\x04\x03" +
		"\x02\x02\x02LM\x07R\x02\x02MN\x07n\x02\x02NO\x07c\x02\x02OP\x07{\x02\x02" +
		"PQ\x07g\x02\x02QR\x07t\x02\x02RS\x07\"\x02\x02S\x06\x03\x02\x02\x02TU" +
		"\x07G\x02\x02UV\x07p\x02\x02VW\x07g\x02\x02WX\x07o\x02\x02XY\x07{\x02" +
		"\x02YZ\x07\"\x02\x02Z\b\x03\x02\x02\x02[\\\x07F\x02\x02\\]\x07q\x02\x02" +
		"]^\x07q\x02\x02^_\x07t\x02\x02_`\x07\"\x02\x02`\n\x03\x02\x02\x02ab\x07" +
		"V\x02\x02bc\x07g\x02\x02cd\x07t\x02\x02de\x07t\x02\x02ef\x07c\x02\x02" +
		"fg\x07k\x02\x02gh\x07p\x02\x02hi\x07\"\x02\x02i\f\x03\x02\x02\x02jk\x07" +
		"R\x02\x02kl\x07n\x02\x02lm\x07c\x02\x02mn\x07v\x02\x02no\x07h\x02\x02" +
		"op\x07q\x02\x02pq\x07t\x02\x02qr\x07o\x02\x02rs\x07\"\x02\x02s\x0E\x03" +
		"\x02\x02\x02tu\x07D\x02\x02uv\x07w\x02\x02vw\x07v\x02\x02wx\x07v\x02\x02" +
		"xy\x07q\x02\x02yz\x07p\x02\x02z{\x07\"\x02\x02{\x10\x03\x02\x02\x02|}" +
		"\x07E\x02\x02}~\x07q\x02\x02~\x7F\x07k\x02\x02\x7F\x80\x07p\x02\x02\x80" +
		"\x12\x03\x02\x02\x02\x81\x82\x07N\x02\x02\x82\x83\x07g\x02\x02\x83\x84" +
		"\x07x\x02\x02\x84\x85\x07g\x02\x02\x85\x86\x07n\x02\x02\x86\x87\x07\"" +
		"\x02\x02\x87\x14\x03\x02\x02\x02\x88\x89\x07E\x02\x02\x89\x8A\x07j\x02" +
		"\x02\x8A\x8B\x07g\x02\x02\x8B\x8C\x07e\x02\x02\x8C\x8D\x07m\x02\x02\x8D" +
		"\x8E\x07u\x02\x02\x8E\x8F\x07\"\x02\x02\x8F\x16\x03\x02\x02\x02\x90\x91" +
		"\x07k\x02\x02\x91\x92\x07h\x02\x02\x92\x93\x07\"\x02\x02\x93\x18\x03\x02" +
		"\x02\x02\x94\x95\x07C\x02\x02\x95\x96\x07f\x02\x02\x96\x97\x07f\x02\x02" +
		"\x97\x1A\x03\x02\x02\x02\x98\x99\x07T\x02\x02\x99\x9A\x07g\x02\x02\x9A" +
		"\x9B\x07o\x02\x02\x9B\x9C\x07q\x02\x02\x9C\x9D\x07x\x02\x02\x9D\x9E\x07" +
		"g\x02\x02\x9E\x1C\x03\x02\x02\x02\x9F\xA0\x07O\x02\x02\xA0\xA1\x07Q\x02" +
		"\x02\xA1\xA2\x07P\x02\x02\xA2\xA3\x07G\x02\x02\xA3\xA4\x07[\x02\x02\xA4" +
		"\x1E\x03\x02\x02\x02\xA5\xA7\t\x03\x02\x02\xA6\xA5\x03\x02\x02\x02\xA7" +
		"\xA8\x03\x02\x02\x02\xA8\xA6\x03\x02\x02\x02\xA8\xA9\x03\x02\x02\x02\xA9" +
		" \x03\x02\x02\x02\xAA\xAE\t\x04\x02\x02\xAB\xAD\t\x05\x02\x02\xAC\xAB" +
		"\x03\x02\x02\x02\xAD\xB0\x03\x02\x02\x02\xAE\xAC\x03\x02\x02\x02\xAE\xAF" +
		"\x03\x02\x02\x02\xAF\"\x03\x02\x02\x02\xB0\xAE\x03\x02\x02\x02\xB1\xB3" +
		"\x07/\x02\x02\xB2\xB1\x03\x02\x02\x02\xB2\xB3\x03\x02\x02\x02\xB3\xB5" +
		"\x03\x02\x02\x02\xB4\xB6\t\x06\x02\x02\xB5\xB4\x03\x02\x02\x02\xB6\xB7" +
		"\x03\x02\x02\x02\xB7\xB5\x03\x02\x02\x02\xB7\xB8\x03\x02\x02\x02\xB8$" +
		"\x03\x02\x02\x02\xB9\xBA\x07.\x02\x02\xBA&\x03\x02\x02\x02\xBB\xBC\x07" +
		"}\x02\x02\xBC(\x03\x02\x02\x02\xBD\xBE\x07\x7F\x02\x02\xBE*\x03\x02\x02" +
		"\x02\xBF\xC0\x07*\x02\x02\xC0,\x03\x02\x02\x02\xC1\xC2\x07+\x02\x02\xC2" +
		".\x03\x02\x02\x02\xC3\xC4\x07]\x02\x02\xC40\x03\x02\x02\x02\xC5\xC6\x07" +
		"_\x02\x02\xC62\x03\x02\x02\x02\xC7\xC8\x07@\x02\x02\xC84\x03\x02\x02\x02" +
		"\xC9\xCA\x07>\x02\x02\xCA6\x03\x02\x02\x02\xCB\xCC\x07?\x02\x02\xCC8\x03" +
		"\x02\x02\x02\xCD\xCE\x07=\x02\x02\xCE:\x03\x02\x02\x02\xCF\xD0\x07<\x02" +
		"\x02\xD0<\x03\x02\x02\x02\xD1\xD3\t\x07\x02\x02\xD2\xD1\x03\x02\x02\x02" +
		"\xD3\xD4\x03\x02\x02\x02\xD4\xD2\x03\x02\x02\x02\xD4\xD5\x03\x02\x02\x02" +
		"\xD5>\x03\x02\x02\x02\xD6\xD8\x05=\x1F\x02\xD7\xD6\x03\x02\x02\x02\xD8" +
		"\xD9\x03\x02\x02\x02\xD9\xD7\x03\x02\x02\x02\xD9\xDA\x03\x02\x02\x02\xDA" +
		"\xDB\x03\x02\x02\x02\xDB\xDD\x05;\x1E\x02\xDC\xDE\x05=\x1F\x02\xDD\xDC" +
		"\x03\x02\x02\x02\xDE\xDF\x03\x02\x02\x02\xDF\xDD\x03\x02\x02\x02\xDF\xE0" +
		"\x03\x02\x02\x02\xE0@\x03\x02\x02\x02\xE1\xE3\t\x02\x02\x02\xE2\xE1\x03" +
		"\x02\x02\x02\xE3\xE4\x03\x02\x02\x02\xE4\xE2\x03\x02\x02\x02\xE4\xE5\x03" +
		"\x02\x02\x02\xE5\xE6\x03\x02\x02\x02\xE6\xE7\b!\x02\x02\xE7B\x03\x02\x02" +
		"\x02\xE8\xEA\t\x03\x02\x02\xE9\xE8\x03\x02\x02\x02\xEA\xEB\x03\x02\x02" +
		"\x02\xEB\xE9\x03\x02\x02\x02\xEB\xEC\x03\x02\x02\x02\xEC\xED\x03\x02\x02" +
		"\x02\xED\xEE\b\"\x03\x02\xEED\x03\x02\x02\x02\x0E\x02H\xA8\xAE\xB2\xB7" +
		"\xD2\xD4\xD9\xDF\xE4\xEB\x04\x02\x03\x02\x04\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!PlatformerLexer.__ATN) {
			PlatformerLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(PlatformerLexer._serializedATN));
		}

		return PlatformerLexer.__ATN;
	}

}


// Generated from src/parser/PlatformerLexer.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class PlatformerLexer extends Lexer {
	public static readonly LEADING_SPACE = 1;
	public static readonly PLAYER = 2;
	public static readonly ENEMY = 3;
	public static readonly DOOR = 4;
	public static readonly TERRAIN = 5;
	public static readonly PLATFORM = 6;
	public static readonly BUTTON = 7;
	public static readonly COIN = 8;
	public static readonly LEVEL = 9;
	public static readonly CHECKS = 10;
	public static readonly IF = 11;
	public static readonly ADD = 12;
	public static readonly REMOVE = 13;
	public static readonly MONEY = 14;
	public static readonly STMT_NEWLINE = 15;
	public static readonly NAME = 16;
	public static readonly CONST = 17;
	public static readonly COMMA = 18;
	public static readonly OPEN_BRACE = 19;
	public static readonly CLOSE_BRACE = 20;
	public static readonly OPEN_PAREN = 21;
	public static readonly CLOSE_PAREN = 22;
	public static readonly OPEN_SQUARE = 23;
	public static readonly CLOSED_SQUARE = 24;
	public static readonly LARGER = 25;
	public static readonly SMALLER = 26;
	public static readonly EQUAL = 27;
	public static readonly SEMICOLON = 28;
	public static readonly COLON = 29;
	public static readonly LITERAL = 30;
	public static readonly LOGIC = 31;
	public static readonly LINK = 32;
	public static readonly SPACE = 33;
	public static readonly NEWLINE = 34;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"LEADING_SPACE", "PLAYER", "ENEMY", "DOOR", "TERRAIN", "PLATFORM", "BUTTON", 
		"COIN", "LEVEL", "CHECKS", "IF", "ADD", "REMOVE", "MONEY", "STMT_NEWLINE", 
		"NAME", "CONST", "COMMA", "OPEN_BRACE", "CLOSE_BRACE", "OPEN_PAREN", "CLOSE_PAREN", 
		"OPEN_SQUARE", "CLOSED_SQUARE", "LARGER", "SMALLER", "EQUAL", "SEMICOLON", 
		"COLON", "LITERAL", "LOGIC", "LINK", "SPACE", "NEWLINE",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, "'Player '", "'Enemy '", "'Door '", "'Terrain '", 
		"'Platform '", "'Button '", "'Coin'", "'Level '", "'Checks '", "'if '", 
		"'Add'", "'Remove'", "'MONEY'", undefined, undefined, undefined, "','", 
		"'{'", "'}'", "'('", "')'", "'['", "']'", "'>'", "'<'", "'='", "';'", 
		"':'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "LEADING_SPACE", "PLAYER", "ENEMY", "DOOR", "TERRAIN", "PLATFORM", 
		"BUTTON", "COIN", "LEVEL", "CHECKS", "IF", "ADD", "REMOVE", "MONEY", "STMT_NEWLINE", 
		"NAME", "CONST", "COMMA", "OPEN_BRACE", "CLOSE_BRACE", "OPEN_PAREN", "CLOSE_PAREN", 
		"OPEN_SQUARE", "CLOSED_SQUARE", "LARGER", "SMALLER", "EQUAL", "SEMICOLON", 
		"COLON", "LITERAL", "LOGIC", "LINK", "SPACE", "NEWLINE",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(PlatformerLexer._LITERAL_NAMES, PlatformerLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return PlatformerLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(PlatformerLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "PlatformerLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return PlatformerLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return PlatformerLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return PlatformerLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return PlatformerLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02$\xF8\b\x01\x04" +
		"\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04" +
		"\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r\t\r" +
		"\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t\x12" +
		"\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t\x17" +
		"\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t\x1C" +
		"\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t\"\x04" +
		"#\t#\x03\x02\x06\x02I\n\x02\r\x02\x0E\x02J\x03\x02\x03\x02\x03\x03\x03" +
		"\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03" +
		"\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03" +
		"\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03" +
		"\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03" +
		"\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03" +
		"\t\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03" +
		"\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03" +
		"\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03" +
		"\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x06\x10\xA9" +
		"\n\x10\r\x10\x0E\x10\xAA\x03\x11\x03\x11\x07\x11\xAF\n\x11\f\x11\x0E\x11" +
		"\xB2\v\x11\x03\x12\x05\x12\xB5\n\x12\x03\x12\x06\x12\xB8\n\x12\r\x12\x0E" +
		"\x12\xB9\x03\x13\x03\x13\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16\x03\x16" +
		"\x03\x17\x03\x17\x03\x18\x03\x18\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1B" +
		"\x03\x1B\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1F\x06\x1F" +
		"\xD5\n\x1F\r\x1F\x0E\x1F\xD6\x03 \x03 \x03 \x03 \x03 \x05 \xDE\n \x03" +
		"!\x06!\xE1\n!\r!\x0E!\xE2\x03!\x03!\x06!\xE7\n!\r!\x0E!\xE8\x03\"\x06" +
		"\"\xEC\n\"\r\"\x0E\"\xED\x03\"\x03\"\x03#\x06#\xF3\n#\r#\x0E#\xF4\x03" +
		"#\x03#\x02\x02\x02$\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02" +
		"\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02" +
		"\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'" +
		"\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C" +
		"7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$\x03\x02\b\x04" +
		"\x02\v\v\"\"\x04\x02\f\f\x0F\x0F\x04\x02C\\c|\x05\x022;C\\c|\x03\x022" +
		";\x06\x02%%/;C\\c|\x02\u0102\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02" +
		"\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02" +
		"\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02" +
		"\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02" +
		"\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02" +
		"\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02" +
		"%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03" +
		"\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02" +
		"\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x02" +
		"9\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02" +
		"\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02" +
		"\x03H\x03\x02\x02\x02\x05N\x03\x02\x02\x02\x07V\x03\x02\x02\x02\t]\x03" +
		"\x02\x02\x02\vc\x03\x02\x02\x02\rl\x03\x02\x02\x02\x0Fv\x03\x02\x02\x02" +
		"\x11~\x03\x02\x02\x02\x13\x83\x03\x02\x02\x02\x15\x8A\x03\x02\x02\x02" +
		"\x17\x92\x03\x02\x02\x02\x19\x96\x03\x02\x02\x02\x1B\x9A\x03\x02\x02\x02" +
		"\x1D\xA1\x03\x02\x02\x02\x1F\xA8\x03\x02\x02\x02!\xAC\x03\x02\x02\x02" +
		"#\xB4\x03\x02\x02\x02%\xBB\x03\x02\x02\x02\'\xBD\x03\x02\x02\x02)\xBF" +
		"\x03\x02\x02\x02+\xC1\x03\x02\x02\x02-\xC3\x03\x02\x02\x02/\xC5\x03\x02" +
		"\x02\x021\xC7\x03\x02\x02\x023\xC9\x03\x02\x02\x025\xCB\x03\x02\x02\x02" +
		"7\xCD\x03\x02\x02\x029\xCF\x03\x02\x02\x02;\xD1\x03\x02\x02\x02=\xD4\x03" +
		"\x02\x02\x02?\xDD\x03\x02\x02\x02A\xE0\x03\x02\x02\x02C\xEB\x03\x02\x02" +
		"\x02E\xF2\x03\x02\x02\x02GI\t\x02\x02\x02HG\x03\x02\x02\x02IJ\x03\x02" +
		"\x02\x02JH\x03\x02\x02\x02JK\x03\x02\x02\x02KL\x03\x02\x02\x02LM\b\x02" +
		"\x02\x02M\x04\x03\x02\x02\x02NO\x07R\x02\x02OP\x07n\x02\x02PQ\x07c\x02" +
		"\x02QR\x07{\x02\x02RS\x07g\x02\x02ST\x07t\x02\x02TU\x07\"\x02\x02U\x06" +
		"\x03\x02\x02\x02VW\x07G\x02\x02WX\x07p\x02\x02XY\x07g\x02\x02YZ\x07o\x02" +
		"\x02Z[\x07{\x02\x02[\\\x07\"\x02\x02\\\b\x03\x02\x02\x02]^\x07F\x02\x02" +
		"^_\x07q\x02\x02_`\x07q\x02\x02`a\x07t\x02\x02ab\x07\"\x02\x02b\n\x03\x02" +
		"\x02\x02cd\x07V\x02\x02de\x07g\x02\x02ef\x07t\x02\x02fg\x07t\x02\x02g" +
		"h\x07c\x02\x02hi\x07k\x02\x02ij\x07p\x02\x02jk\x07\"\x02\x02k\f\x03\x02" +
		"\x02\x02lm\x07R\x02\x02mn\x07n\x02\x02no\x07c\x02\x02op\x07v\x02\x02p" +
		"q\x07h\x02\x02qr\x07q\x02\x02rs\x07t\x02\x02st\x07o\x02\x02tu\x07\"\x02" +
		"\x02u\x0E\x03\x02\x02\x02vw\x07D\x02\x02wx\x07w\x02\x02xy\x07v\x02\x02" +
		"yz\x07v\x02\x02z{\x07q\x02\x02{|\x07p\x02\x02|}\x07\"\x02\x02}\x10\x03" +
		"\x02\x02\x02~\x7F\x07E\x02\x02\x7F\x80\x07q\x02\x02\x80\x81\x07k\x02\x02" +
		"\x81\x82\x07p\x02\x02\x82\x12\x03\x02\x02\x02\x83\x84\x07N\x02\x02\x84" +
		"\x85\x07g\x02\x02\x85\x86\x07x\x02\x02\x86\x87\x07g\x02\x02\x87\x88\x07" +
		"n\x02\x02\x88\x89\x07\"\x02\x02\x89\x14\x03\x02\x02\x02\x8A\x8B\x07E\x02" +
		"\x02\x8B\x8C\x07j\x02\x02\x8C\x8D\x07g\x02\x02\x8D\x8E\x07e\x02\x02\x8E" +
		"\x8F\x07m\x02\x02\x8F\x90\x07u\x02\x02\x90\x91\x07\"\x02\x02\x91\x16\x03" +
		"\x02\x02\x02\x92\x93\x07k\x02\x02\x93\x94\x07h\x02\x02\x94\x95\x07\"\x02" +
		"\x02\x95\x18\x03\x02\x02\x02\x96\x97\x07C\x02\x02\x97\x98\x07f\x02\x02" +
		"\x98\x99\x07f\x02\x02\x99\x1A\x03\x02\x02\x02\x9A\x9B\x07T\x02\x02\x9B" +
		"\x9C\x07g\x02\x02\x9C\x9D\x07o\x02\x02\x9D\x9E\x07q\x02\x02\x9E\x9F\x07" +
		"x\x02\x02\x9F\xA0\x07g\x02\x02\xA0\x1C\x03\x02\x02\x02\xA1\xA2\x07O\x02" +
		"\x02\xA2\xA3\x07Q\x02\x02\xA3\xA4\x07P\x02\x02\xA4\xA5\x07G\x02\x02\xA5" +
		"\xA6\x07[\x02\x02\xA6\x1E\x03\x02\x02\x02\xA7\xA9\t\x03\x02\x02\xA8\xA7" +
		"\x03\x02\x02\x02\xA9\xAA\x03\x02\x02\x02\xAA\xA8\x03\x02\x02\x02\xAA\xAB" +
		"\x03\x02\x02\x02\xAB \x03\x02\x02\x02\xAC\xB0\t\x04\x02\x02\xAD\xAF\t" +
		"\x05\x02\x02\xAE\xAD\x03\x02\x02\x02\xAF\xB2\x03\x02\x02\x02\xB0\xAE\x03" +
		"\x02\x02\x02\xB0\xB1\x03\x02\x02\x02\xB1\"\x03\x02\x02\x02\xB2\xB0\x03" +
		"\x02\x02\x02\xB3\xB5\x07/\x02\x02\xB4\xB3\x03\x02\x02\x02\xB4\xB5\x03" +
		"\x02\x02\x02\xB5\xB7\x03\x02\x02\x02\xB6\xB8\t\x06\x02\x02\xB7\xB6\x03" +
		"\x02\x02\x02\xB8\xB9\x03\x02\x02\x02\xB9\xB7\x03\x02\x02\x02\xB9\xBA\x03" +
		"\x02\x02\x02\xBA$\x03\x02\x02\x02\xBB\xBC\x07.\x02\x02\xBC&\x03\x02\x02" +
		"\x02\xBD\xBE\x07}\x02\x02\xBE(\x03\x02\x02\x02\xBF\xC0\x07\x7F\x02\x02" +
		"\xC0*\x03\x02\x02\x02\xC1\xC2\x07*\x02\x02\xC2,\x03\x02\x02\x02\xC3\xC4" +
		"\x07+\x02\x02\xC4.\x03\x02\x02\x02\xC5\xC6\x07]\x02\x02\xC60\x03\x02\x02" +
		"\x02\xC7\xC8\x07_\x02\x02\xC82\x03\x02\x02\x02\xC9\xCA\x07@\x02\x02\xCA" +
		"4\x03\x02\x02\x02\xCB\xCC\x07>\x02\x02\xCC6\x03\x02\x02\x02\xCD\xCE\x07" +
		"?\x02\x02\xCE8\x03\x02\x02\x02\xCF\xD0\x07=\x02\x02\xD0:\x03\x02\x02\x02" +
		"\xD1\xD2\x07<\x02\x02\xD2<\x03\x02\x02\x02\xD3\xD5\t\x07\x02\x02\xD4\xD3" +
		"\x03\x02\x02\x02\xD5\xD6\x03\x02\x02\x02\xD6\xD4\x03\x02\x02\x02\xD6\xD7" +
		"\x03\x02\x02\x02\xD7>\x03\x02\x02\x02\xD8\xD9\x07C\x02\x02\xD9\xDA\x07" +
		"P\x02\x02\xDA\xDE\x07F\x02\x02\xDB\xDC\x07Q\x02\x02\xDC\xDE\x07T\x02\x02" +
		"\xDD\xD8\x03\x02\x02\x02\xDD\xDB\x03\x02\x02\x02\xDE@\x03\x02\x02\x02" +
		"\xDF\xE1\x05=\x1F\x02\xE0\xDF\x03\x02\x02\x02\xE1\xE2\x03\x02\x02\x02" +
		"\xE2\xE0\x03\x02\x02\x02\xE2\xE3\x03\x02\x02\x02\xE3\xE4\x03\x02\x02\x02" +
		"\xE4\xE6\x05;\x1E\x02\xE5\xE7\x05=\x1F\x02\xE6\xE5\x03\x02\x02\x02\xE7" +
		"\xE8\x03\x02\x02\x02\xE8\xE6\x03\x02\x02\x02\xE8\xE9\x03\x02\x02\x02\xE9" +
		"B\x03\x02\x02\x02\xEA\xEC\t\x02\x02\x02\xEB\xEA\x03\x02\x02\x02\xEC\xED" +
		"\x03\x02\x02\x02\xED\xEB\x03\x02\x02\x02\xED\xEE\x03\x02\x02\x02\xEE\xEF" +
		"\x03\x02\x02\x02\xEF\xF0\b\"\x02\x02\xF0D\x03\x02\x02\x02\xF1\xF3\t\x03" +
		"\x02\x02\xF2\xF1\x03\x02\x02\x02\xF3\xF4\x03\x02\x02\x02\xF4\xF2\x03\x02" +
		"\x02\x02\xF4\xF5\x03\x02\x02\x02\xF5\xF6\x03\x02\x02\x02\xF6\xF7\b#\x03" +
		"\x02\xF7F\x03\x02\x02\x02\x0F\x02J\xAA\xB0\xB4\xB9\xD4\xD6\xDD\xE2\xE8" +
		"\xED\xF4\x04\x02\x03\x02\x04\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!PlatformerLexer.__ATN) {
			PlatformerLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(PlatformerLexer._serializedATN));
		}

		return PlatformerLexer.__ATN;
	}

}


"use strict";
// Generated from src/parser/PlatformerLexer.g4 by ANTLR 4.9.0-SNAPSHOT
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlatformerLexer = void 0;
const ATNDeserializer_1 = require("antlr4ts/atn/ATNDeserializer");
const Lexer_1 = require("antlr4ts/Lexer");
const LexerATNSimulator_1 = require("antlr4ts/atn/LexerATNSimulator");
const VocabularyImpl_1 = require("antlr4ts/VocabularyImpl");
const Utils = __importStar(require("antlr4ts/misc/Utils"));
class PlatformerLexer extends Lexer_1.Lexer {
    // tslint:enable:no-trailing-whitespace
    constructor(input) {
        super(input);
        this._interp = new LexerATNSimulator_1.LexerATNSimulator(PlatformerLexer._ATN, this);
    }
    // @Override
    // @NotNull
    get vocabulary() {
        return PlatformerLexer.VOCABULARY;
    }
    // @Override
    get grammarFileName() { return "PlatformerLexer.g4"; }
    // @Override
    get ruleNames() { return PlatformerLexer.ruleNames; }
    // @Override
    get serializedATN() { return PlatformerLexer._serializedATN; }
    // @Override
    get channelNames() { return PlatformerLexer.channelNames; }
    // @Override
    get modeNames() { return PlatformerLexer.modeNames; }
    static get _ATN() {
        if (!PlatformerLexer.__ATN) {
            PlatformerLexer.__ATN = new ATNDeserializer_1.ATNDeserializer().deserialize(Utils.toCharArray(PlatformerLexer._serializedATN));
        }
        return PlatformerLexer.__ATN;
    }
}
exports.PlatformerLexer = PlatformerLexer;
PlatformerLexer.LEADING_SPACE = 1;
PlatformerLexer.COMPONENT = 2;
PlatformerLexer.PLAYER = 3;
PlatformerLexer.ENEMY = 4;
PlatformerLexer.DOOR = 5;
PlatformerLexer.TERRAIN = 6;
PlatformerLexer.PLATFORM = 7;
PlatformerLexer.BUTTON = 8;
PlatformerLexer.COIN = 9;
PlatformerLexer.LEVEL = 10;
PlatformerLexer.CHECKS = 11;
PlatformerLexer.IF = 12;
PlatformerLexer.ADD = 13;
PlatformerLexer.REMOVE = 14;
PlatformerLexer.LOGIC = 15;
PlatformerLexer.STMT_NEWLINE = 16;
PlatformerLexer.NAME = 17;
PlatformerLexer.CONST = 18;
PlatformerLexer.COMMA = 19;
PlatformerLexer.OPEN_BRACE = 20;
PlatformerLexer.CLOSE_BRACE = 21;
PlatformerLexer.OPEN_PAREN = 22;
PlatformerLexer.CLOSE_PAREN = 23;
PlatformerLexer.OPEN_SQUARE = 24;
PlatformerLexer.CLOSED_SQUARE = 25;
PlatformerLexer.LARGER = 26;
PlatformerLexer.SMALLER = 27;
PlatformerLexer.EQUAL = 28;
PlatformerLexer.SEMICOLON = 29;
PlatformerLexer.COLON = 30;
PlatformerLexer.LITERAL = 31;
PlatformerLexer.LINK = 32;
PlatformerLexer.SPACE = 33;
PlatformerLexer.NEWLINE = 34;
// tslint:disable:no-trailing-whitespace
PlatformerLexer.channelNames = [
    "DEFAULT_TOKEN_CHANNEL", "HIDDEN",
];
// tslint:disable:no-trailing-whitespace
PlatformerLexer.modeNames = [
    "DEFAULT_MODE",
];
PlatformerLexer.ruleNames = [
    "LEADING_SPACE", "COMPONENT", "PLAYER", "ENEMY", "DOOR", "TERRAIN", "PLATFORM",
    "BUTTON", "COIN", "LEVEL", "CHECKS", "IF", "ADD", "REMOVE", "LOGIC", "STMT_NEWLINE",
    "NAME", "CONST", "COMMA", "OPEN_BRACE", "CLOSE_BRACE", "OPEN_PAREN", "CLOSE_PAREN",
    "OPEN_SQUARE", "CLOSED_SQUARE", "LARGER", "SMALLER", "EQUAL", "SEMICOLON",
    "COLON", "LITERAL", "LINK", "SPACE", "NEWLINE",
];
PlatformerLexer._LITERAL_NAMES = [
    undefined, undefined, undefined, "'Player'", "'Enemy'", "'Door'", "'Terrain'",
    "'Platform'", "'Button'", "'Coin'", "'Level'", "'Checks'", "'IF'", undefined,
    undefined, undefined, undefined, undefined, undefined, "','", "'{'", "'}'",
    "'('", "')'", "'['", "']'", "'>'", "'<'", "'='", "';'", "':'",
];
PlatformerLexer._SYMBOLIC_NAMES = [
    undefined, "LEADING_SPACE", "COMPONENT", "PLAYER", "ENEMY", "DOOR", "TERRAIN",
    "PLATFORM", "BUTTON", "COIN", "LEVEL", "CHECKS", "IF", "ADD", "REMOVE",
    "LOGIC", "STMT_NEWLINE", "NAME", "CONST", "COMMA", "OPEN_BRACE", "CLOSE_BRACE",
    "OPEN_PAREN", "CLOSE_PAREN", "OPEN_SQUARE", "CLOSED_SQUARE", "LARGER",
    "SMALLER", "EQUAL", "SEMICOLON", "COLON", "LITERAL", "LINK", "SPACE",
    "NEWLINE",
];
PlatformerLexer.VOCABULARY = new VocabularyImpl_1.VocabularyImpl(PlatformerLexer._LITERAL_NAMES, PlatformerLexer._SYMBOLIC_NAMES, []);
PlatformerLexer._serializedATN = "\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02$\xFC\b\x01\x04" +
    "\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04" +
    "\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r\t\r" +
    "\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t\x12" +
    "\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t\x17" +
    "\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t\x1C" +
    "\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t\"\x04" +
    "#\t#\x03\x02\x06\x02I\n\x02\r\x02\x0E\x02J\x03\x02\x03\x02\x03\x03\x03" +
    "\x03\x03\x03\x03\x03\x03\x03\x03\x03\x05\x03U\n\x03\x03\x04\x03\x04\x03" +
    "\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03" +
    "\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03" +
    "\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03" +
    "\b\x03\b\x03\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03" +
    "\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\f\x03" +
    "\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03" +
    "\x0E\x03\x0E\x03\x0E\x03\x0E\x05\x0E\x9C\n\x0E\x03\x0F\x03\x0F\x03\x0F" +
    "\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F" +
    "\x05\x0F\xAA\n\x0F\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x05\x10\xB1" +
    "\n\x10\x03\x11\x06\x11\xB4\n\x11\r\x11\x0E\x11\xB5\x03\x12\x03\x12\x07" +
    "\x12\xBA\n\x12\f\x12\x0E\x12\xBD\v\x12\x03\x13\x05\x13\xC0\n\x13\x03\x13" +
    "\x06\x13\xC3\n\x13\r\x13\x0E\x13\xC4\x03\x14\x03\x14\x03\x15\x03\x15\x03" +
    "\x16\x03\x16\x03\x17\x03\x17\x03\x18\x03\x18\x03\x19\x03\x19\x03\x1A\x03" +
    "\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03" +
    "\x1F\x03\x1F\x03 \x06 \xE0\n \r \x0E \xE1\x03!\x06!\xE5\n!\r!\x0E!\xE6" +
    "\x03!\x03!\x06!\xEB\n!\r!\x0E!\xEC\x03\"\x06\"\xF0\n\"\r\"\x0E\"\xF1\x03" +
    "\"\x03\"\x03#\x06#\xF7\n#\r#\x0E#\xF8\x03#\x03#\x02\x02\x02$\x03\x02\x03" +
    "\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02" +
    "\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F" +
    "\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18" +
    "/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 " +
    "?\x02!A\x02\"C\x02#E\x02$\x03\x02\b\x04\x02\v\v\"\"\x04\x02\f\f\x0F\x0F" +
    "\x04\x02C\\c|\x05\x022;C\\c|\x03\x022;\x06\x02%%/;C\\c|\x02\u010D\x02" +
    "\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02" +
    "\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F" +
    "\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15" +
    "\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B" +
    "\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!" +
    "\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02" +
    "\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02" +
    "\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03" +
    "\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02" +
    "\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02" +
    "C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x03H\x03\x02\x02\x02\x05T\x03\x02" +
    "\x02\x02\x07V\x03\x02\x02\x02\t]\x03\x02\x02\x02\vc\x03\x02\x02\x02\r" +
    "h\x03\x02\x02\x02\x0Fp\x03\x02\x02\x02\x11y\x03\x02\x02\x02\x13\x80\x03" +
    "\x02\x02\x02\x15\x85\x03\x02\x02\x02\x17\x8B\x03\x02\x02\x02\x19\x92\x03" +
    "\x02\x02\x02\x1B\x9B\x03\x02\x02\x02\x1D\xA9\x03\x02\x02\x02\x1F\xB0\x03" +
    "\x02\x02\x02!\xB3\x03\x02\x02\x02#\xB7\x03\x02\x02\x02%\xBF\x03\x02\x02" +
    "\x02\'\xC6\x03\x02\x02\x02)\xC8\x03\x02\x02\x02+\xCA\x03\x02\x02\x02-" +
    "\xCC\x03\x02\x02\x02/\xCE\x03\x02\x02\x021\xD0\x03\x02\x02\x023\xD2\x03" +
    "\x02\x02\x025\xD4\x03\x02\x02\x027\xD6\x03\x02\x02\x029\xD8\x03\x02\x02" +
    "\x02;\xDA\x03\x02\x02\x02=\xDC\x03\x02\x02\x02?\xDF\x03\x02\x02\x02A\xE4" +
    "\x03\x02\x02\x02C\xEF\x03\x02\x02\x02E\xF6\x03\x02\x02\x02GI\t\x02\x02" +
    "\x02HG\x03\x02\x02\x02IJ\x03\x02\x02\x02JH\x03\x02\x02\x02JK\x03\x02\x02" +
    "\x02KL\x03\x02\x02\x02LM\b\x02\x02\x02M\x04\x03\x02\x02\x02NU\x05\t\x05" +
    "\x02OU\x05\v\x06\x02PU\x05\x11\t\x02QU\x05\r\x07\x02RU\x05\x0F\b\x02S" +
    "U\x05\x13\n\x02TN\x03\x02\x02\x02TO\x03\x02\x02\x02TP\x03\x02\x02\x02" +
    "TQ\x03\x02\x02\x02TR\x03\x02\x02\x02TS\x03\x02\x02\x02U\x06\x03\x02\x02" +
    "\x02VW\x07R\x02\x02WX\x07n\x02\x02XY\x07c\x02\x02YZ\x07{\x02\x02Z[\x07" +
    "g\x02\x02[\\\x07t\x02\x02\\\b\x03\x02\x02\x02]^\x07G\x02\x02^_\x07p\x02" +
    "\x02_`\x07g\x02\x02`a\x07o\x02\x02ab\x07{\x02\x02b\n\x03\x02\x02\x02c" +
    "d\x07F\x02\x02de\x07q\x02\x02ef\x07q\x02\x02fg\x07t\x02\x02g\f\x03\x02" +
    "\x02\x02hi\x07V\x02\x02ij\x07g\x02\x02jk\x07t\x02\x02kl\x07t\x02\x02l" +
    "m\x07c\x02\x02mn\x07k\x02\x02no\x07p\x02\x02o\x0E\x03\x02\x02\x02pq\x07" +
    "R\x02\x02qr\x07n\x02\x02rs\x07c\x02\x02st\x07v\x02\x02tu\x07h\x02\x02" +
    "uv\x07q\x02\x02vw\x07t\x02\x02wx\x07o\x02\x02x\x10\x03\x02\x02\x02yz\x07" +
    "D\x02\x02z{\x07w\x02\x02{|\x07v\x02\x02|}\x07v\x02\x02}~\x07q\x02\x02" +
    "~\x7F\x07p\x02\x02\x7F\x12\x03\x02\x02\x02\x80\x81\x07E\x02\x02\x81\x82" +
    "\x07q\x02\x02\x82\x83\x07k\x02\x02\x83\x84\x07p\x02\x02\x84\x14\x03\x02" +
    "\x02\x02\x85\x86\x07N\x02\x02\x86\x87\x07g\x02\x02\x87\x88\x07x\x02\x02" +
    "\x88\x89\x07g\x02\x02\x89\x8A\x07n\x02\x02\x8A\x16\x03\x02\x02\x02\x8B" +
    "\x8C\x07E\x02\x02\x8C\x8D\x07j\x02\x02\x8D\x8E\x07g\x02\x02\x8E\x8F\x07" +
    "e\x02\x02\x8F\x90\x07m\x02\x02\x90\x91\x07u\x02\x02\x91\x18\x03\x02\x02" +
    "\x02\x92\x93\x07K\x02\x02\x93\x94\x07H\x02\x02\x94\x1A\x03\x02\x02\x02" +
    "\x95\x96\x07c\x02\x02\x96\x97\x07f\x02\x02\x97\x9C\x07f\x02\x02\x98\x99" +
    "\x07C\x02\x02\x99\x9A\x07f\x02\x02\x9A\x9C\x07f\x02\x02\x9B\x95\x03\x02" +
    "\x02\x02\x9B\x98\x03\x02\x02\x02\x9C\x1C\x03\x02\x02\x02\x9D\x9E\x07t" +
    "\x02\x02\x9E\x9F\x07g\x02\x02\x9F\xA0\x07o\x02\x02\xA0\xA1\x07q\x02\x02" +
    "\xA1\xA2\x07x\x02\x02\xA2\xAA\x07g\x02\x02\xA3\xA4\x07T\x02\x02\xA4\xA5" +
    "\x07g\x02\x02\xA5\xA6\x07o\x02\x02\xA6\xA7\x07q\x02\x02\xA7\xA8\x07x\x02" +
    "\x02\xA8\xAA\x07g\x02\x02\xA9\x9D\x03\x02\x02\x02\xA9\xA3\x03\x02\x02" +
    "\x02\xAA\x1E\x03\x02\x02\x02\xAB\xAC\x07C\x02\x02\xAC\xAD\x07P\x02\x02" +
    "\xAD\xB1\x07F\x02\x02\xAE\xAF\x07Q\x02\x02\xAF\xB1\x07T\x02\x02\xB0\xAB" +
    "\x03\x02\x02\x02\xB0\xAE\x03\x02\x02\x02\xB1 \x03\x02\x02\x02\xB2\xB4" +
    "\t\x03\x02\x02\xB3\xB2\x03\x02\x02\x02\xB4\xB5\x03\x02\x02\x02\xB5\xB3" +
    "\x03\x02\x02\x02\xB5\xB6\x03\x02\x02\x02\xB6\"\x03\x02\x02\x02\xB7\xBB" +
    "\t\x04\x02\x02\xB8\xBA\t\x05\x02\x02\xB9\xB8\x03\x02\x02\x02\xBA\xBD\x03" +
    "\x02\x02\x02\xBB\xB9\x03\x02\x02\x02\xBB\xBC\x03\x02\x02\x02\xBC$\x03" +
    "\x02\x02\x02\xBD\xBB\x03\x02\x02\x02\xBE\xC0\x07/\x02\x02\xBF\xBE\x03" +
    "\x02\x02\x02\xBF\xC0\x03\x02\x02\x02\xC0\xC2\x03\x02\x02\x02\xC1\xC3\t" +
    "\x06\x02\x02\xC2\xC1\x03\x02\x02\x02\xC3\xC4\x03\x02\x02\x02\xC4\xC2\x03" +
    "\x02\x02\x02\xC4\xC5\x03\x02\x02\x02\xC5&\x03\x02\x02\x02\xC6\xC7\x07" +
    ".\x02\x02\xC7(\x03\x02\x02\x02\xC8\xC9\x07}\x02\x02\xC9*\x03\x02\x02\x02" +
    "\xCA\xCB\x07\x7F\x02\x02\xCB,\x03\x02\x02\x02\xCC\xCD\x07*\x02\x02\xCD" +
    ".\x03\x02\x02\x02\xCE\xCF\x07+\x02\x02\xCF0\x03\x02\x02\x02\xD0\xD1\x07" +
    "]\x02\x02\xD12\x03\x02\x02\x02\xD2\xD3\x07_\x02\x02\xD34\x03\x02\x02\x02" +
    "\xD4\xD5\x07@\x02\x02\xD56\x03\x02\x02\x02\xD6\xD7\x07>\x02\x02\xD78\x03" +
    "\x02\x02\x02\xD8\xD9\x07?\x02\x02\xD9:\x03\x02\x02\x02\xDA\xDB\x07=\x02" +
    "\x02\xDB<\x03\x02\x02\x02\xDC\xDD\x07<\x02\x02\xDD>\x03\x02\x02\x02\xDE" +
    "\xE0\t\x07\x02\x02\xDF\xDE\x03\x02\x02\x02\xE0\xE1\x03\x02\x02\x02\xE1" +
    "\xDF\x03\x02\x02\x02\xE1\xE2\x03\x02\x02\x02\xE2@\x03\x02\x02\x02\xE3" +
    "\xE5\x05? \x02\xE4\xE3\x03\x02\x02\x02\xE5\xE6\x03\x02\x02\x02\xE6\xE4" +
    "\x03\x02\x02\x02\xE6\xE7\x03\x02\x02\x02\xE7\xE8\x03\x02\x02\x02\xE8\xEA" +
    "\x05=\x1F\x02\xE9\xEB\x05? \x02\xEA\xE9\x03\x02\x02\x02\xEB\xEC\x03\x02" +
    "\x02\x02\xEC\xEA\x03\x02\x02\x02\xEC\xED\x03\x02\x02\x02\xEDB\x03\x02" +
    "\x02\x02\xEE\xF0\t\x02\x02\x02\xEF\xEE\x03\x02\x02\x02\xF0\xF1\x03\x02" +
    "\x02\x02\xF1\xEF\x03\x02\x02\x02\xF1\xF2\x03\x02\x02\x02\xF2\xF3\x03\x02" +
    "\x02\x02\xF3\xF4\b\"\x02\x02\xF4D\x03\x02\x02\x02\xF5\xF7\t\x03\x02\x02" +
    "\xF6\xF5\x03\x02\x02\x02\xF7\xF8\x03\x02\x02\x02\xF8\xF6\x03\x02\x02\x02" +
    "\xF8\xF9\x03\x02\x02\x02\xF9\xFA\x03\x02\x02\x02\xFA\xFB\b#\x03\x02\xFB" +
    "F\x03\x02\x02\x02\x12\x02JT\x9B\xA9\xB0\xB5\xBB\xBF\xC4\xDF\xE1\xE6\xEC" +
    "\xF1\xF8\x04\x02\x03\x02\x04\x02\x02";
